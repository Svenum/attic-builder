GIT_INIT: "false" #Set to true if you want the fetcher to clone the nixconfig repo
GITHUB_REPO: "" #The git repo to clone (NOT the link just the name of the repo)
GITHUB_BRANCH: "" #The branch to clone
GITHUB_USER: "" #The username of your GIT_TOKEN
GITHUB_TOKEN: "" #The token of your GIT_USER
FLAKE_PATH: "" #The path to your git repo (defaults to /builder in the container and ./ in the github action)
BUILD_ON_STARTUP: "false" #If set to true, the script will run the build on startup of the container
FREQUENCY: "60000" #The frequency in which the script will check for new commits in the repo (in ms) (defaults to 60000)
MINIMUM_INTERVAL_BETWEEN_BUILDS: "2d" #The minimum interval between two builds (defaults to 2d) (can be in ms, s, m, h, d)

BUILD_SYSTEMS: "true" #If set to true, the script will build the systems
BUILD_PACKAGES: "true" #If set to true, the script will build the packages
INSTALL_DEPS: "true" #If set to true, the script will install the dependencies
NO_KEEP_ATTIC_CONF: "true" #If set to true, the script will not keep the attic.conf file and remove it before re-configuring
LITTLE_SPACE: "true" #Recommended to set this to true in the Docker, cleans up the nix store after each build
ONLY_BUILD_SYSTEMS: "comma,seperated,list,of,hosts" #Only build the systems in this list, if you do not provide this, all will be built
ATTIC_CACHE_NAME: "" #REQUIRED: The name of the attic cache
ATTIC_CACHE_URL: "http://attic:8080" #REQUIRED: The url of the attic cache (in a docker-compose setup it's recommended to use the service name, to avoid bandwidth hits)
ATTIC_CACHE_TOKEN: "" #REQUIRED: The token to use for the attic cache
MAX_JOBS: 2 #The maximum number of jobs to run at once
DONT_FAIL: "true" #If set to true, the script will append the --keep-going to nix build

LOG_LEVEL: "DEBUG" #The log level of the script (can be DEBUG, INFO, WARNING, ERROR)
JSON_LOGGING: "false" #If set to true, the script will log in json format